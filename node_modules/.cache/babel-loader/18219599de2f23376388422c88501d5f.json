{"ast":null,"code":"import { getYear, getMonth as getMonthIndex, getCenturyStart, getPreviousCenturyStart, getNextCenturyStart, getCenturyEnd, getPreviousCenturyEnd, getCenturyRange, getDecadeStart, getPreviousDecadeStart, getNextDecadeStart, getDecadeEnd, getPreviousDecadeEnd, getDecadeRange, getYearStart, getPreviousYearStart, getNextYearStart, getYearEnd, getPreviousYearEnd, getYearRange, getMonthStart, getPreviousMonthStart, getNextMonthStart, getMonthEnd, getPreviousMonthEnd, getMonthRange, getDayStart, getDayEnd, getDayRange } from '@wojtekmaj/date-utils';\nimport { CALENDAR_TYPES, WEEKDAYS } from './const';\nimport { formatYear as defaultFormatYear } from './dateFormatter';\nvar SUNDAY = WEEKDAYS[0];\nvar FRIDAY = WEEKDAYS[5];\nvar SATURDAY = WEEKDAYS[6];\n/* Simple getters - getting a property of a given point in time */\n\nexport function getDayOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CALENDAR_TYPES.ISO_8601;\n  var weekday = date.getDay();\n  switch (calendarType) {\n    case CALENDAR_TYPES.ISO_8601:\n      // Shifts days of the week so that Monday is 0, Sunday is 6\n      return (weekday + 6) % 7;\n    case CALENDAR_TYPES.ARABIC:\n      return (weekday + 1) % 7;\n    case CALENDAR_TYPES.HEBREW:\n    case CALENDAR_TYPES.US:\n      return weekday;\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}\n/**\r\n * Century\r\n */\n\nexport function getBeginOfCenturyYear(date) {\n  var beginOfCentury = getCenturyStart(date);\n  return getYear(beginOfCentury);\n}\n/**\r\n * Decade\r\n */\n\nexport function getBeginOfDecadeYear(date) {\n  var beginOfDecade = getDecadeStart(date);\n  return getYear(beginOfDecade);\n}\n/**\r\n * Week\r\n */\n\n/**\r\n * Returns the beginning of a given week.\r\n *\r\n * @param {Date} date Date.\r\n * @param {string} calendarType Calendar type. Can be ISO 8601 or US.\r\n */\n\nexport function getBeginOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CALENDAR_TYPES.ISO_8601;\n  var year = getYear(date);\n  var monthIndex = getMonthIndex(date);\n  var day = date.getDate() - getDayOfWeek(date, calendarType);\n  return new Date(year, monthIndex, day);\n}\n/**\r\n * Gets week number according to ISO 8601 or US standard.\r\n * In ISO 8601, Arabic and Hebrew week 1 is the one with January 4.\r\n * In US calendar week 1 is the one with January 1.\r\n *\r\n * @param {Date} date Date.\r\n * @param {string} calendarType Calendar type. Can be ISO 8601 or US.\r\n */\n\nexport function getWeekNumber(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CALENDAR_TYPES.ISO_8601;\n  var calendarTypeForWeekNumber = calendarType === CALENDAR_TYPES.US ? CALENDAR_TYPES.US : CALENDAR_TYPES.ISO_8601;\n  var beginOfWeek = getBeginOfWeek(date, calendarTypeForWeekNumber);\n  var year = getYear(date) + 1;\n  var dayInWeekOne;\n  var beginOfFirstWeek; // Look for the first week one that does not come after a given date\n\n  do {\n    dayInWeekOne = new Date(year, 0, calendarTypeForWeekNumber === CALENDAR_TYPES.ISO_8601 ? 4 : 1);\n    beginOfFirstWeek = getBeginOfWeek(dayInWeekOne, calendarTypeForWeekNumber);\n    year -= 1;\n  } while (date - beginOfFirstWeek < 0);\n  return Math.round((beginOfWeek - beginOfFirstWeek) / (8.64e7 * 7)) + 1;\n}\n/**\r\n * Others\r\n */\n\n/**\r\n * Returns the beginning of a given range.\r\n *\r\n * @param {string} rangeType Range type (e.g. 'day')\r\n * @param {Date} date Date.\r\n */\n\nexport function getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getCenturyStart(date);\n    case 'decade':\n      return getDecadeStart(date);\n    case 'year':\n      return getYearStart(date);\n    case 'month':\n      return getMonthStart(date);\n    case 'day':\n      return getDayStart(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexport function getBeginPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getPreviousCenturyStart(date);\n    case 'decade':\n      return getPreviousDecadeStart(date);\n    case 'year':\n      return getPreviousYearStart(date);\n    case 'month':\n      return getPreviousMonthStart(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexport function getBeginNext(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getNextCenturyStart(date);\n    case 'decade':\n      return getNextDecadeStart(date);\n    case 'year':\n      return getNextYearStart(date);\n    case 'month':\n      return getNextMonthStart(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexport var getBeginPrevious2 = function getBeginPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getPreviousDecadeStart(date, -100);\n    case 'year':\n      return getPreviousYearStart(date, -10);\n    case 'month':\n      return getPreviousMonthStart(date, -12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\nexport var getBeginNext2 = function getBeginNext2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getNextDecadeStart(date, 100);\n    case 'year':\n      return getNextYearStart(date, 10);\n    case 'month':\n      return getNextMonthStart(date, 12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n/**\r\n * Returns the end of a given range.\r\n *\r\n * @param {string} rangeType Range type (e.g. 'day')\r\n * @param {Date} date Date.\r\n */\n\nexport function getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getCenturyEnd(date);\n    case 'decade':\n      return getDecadeEnd(date);\n    case 'year':\n      return getYearEnd(date);\n    case 'month':\n      return getMonthEnd(date);\n    case 'day':\n      return getDayEnd(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexport function getEndPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getPreviousCenturyEnd(date);\n    case 'decade':\n      return getPreviousDecadeEnd(date);\n    case 'year':\n      return getPreviousYearEnd(date);\n    case 'month':\n      return getPreviousMonthEnd(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\nexport var getEndPrevious2 = function getEndPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getPreviousDecadeEnd(date, -100);\n    case 'year':\n      return getPreviousYearEnd(date, -10);\n    case 'month':\n      return getPreviousMonthEnd(date, -12);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n/**\r\n * Returns an array with the beginning and the end of a given range.\r\n *\r\n * @param {string} rangeType Range type (e.g. 'day')\r\n * @param {Date} date Date.\r\n */\n\nexport function getRange(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getCenturyRange(date);\n    case 'decade':\n      return getDecadeRange(date);\n    case 'year':\n      return getYearRange(date);\n    case 'month':\n      return getMonthRange(date);\n    case 'day':\n      return getDayRange(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n/**\r\n * Creates a range out of two values, ensuring they are in order and covering entire period ranges.\r\n *\r\n * @param {string} rangeType Range type (e.g. 'day')\r\n * @param {Date} date1 First date.\r\n * @param {Date} date2 Second date.\r\n */\n\nexport function getValueRange(rangeType, date1, date2) {\n  var rawNextValue = [date1, date2].sort(function (a, b) {\n    return a - b;\n  });\n  return [getBegin(rangeType, rawNextValue[0]), getEnd(rangeType, rawNextValue[1])];\n}\nfunction toYearLabel(locale) {\n  var formatYear = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultFormatYear;\n  var dates = arguments.length > 2 ? arguments[2] : undefined;\n  return dates.map(function (date) {\n    return formatYear(locale, date);\n  }).join(' â€“ ');\n}\n/**\r\n * Returns a string labelling a century of a given date.\r\n * For example, for 2017 it will return 2001-2100.\r\n *\r\n * @param {Date|String|Number} date Date or a year as a string or as a number.\r\n */\n\nexport function getCenturyLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, getCenturyRange(date));\n}\n/**\r\n * Returns a string labelling a century of a given date.\r\n * For example, for 2017 it will return 2011-2020.\r\n *\r\n * @param {Date|String|Number} date Date or a year as a string or as a number.\r\n */\n\nexport function getDecadeLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, getDecadeRange(date));\n}\n/**\r\n * Returns a boolean determining whether a given date is on Saturday or Sunday.\r\n *\r\n * @param {Date} date Date.\r\n */\n\nexport function isWeekend(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CALENDAR_TYPES.ISO_8601;\n  var weekday = date.getDay();\n  switch (calendarType) {\n    case CALENDAR_TYPES.ARABIC:\n    case CALENDAR_TYPES.HEBREW:\n      return weekday === FRIDAY || weekday === SATURDAY;\n    case CALENDAR_TYPES.ISO_8601:\n    case CALENDAR_TYPES.US:\n      return weekday === SATURDAY || weekday === SUNDAY;\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}","map":{"version":3,"names":["getYear","getMonth","getMonthIndex","getCenturyStart","getPreviousCenturyStart","getNextCenturyStart","getCenturyEnd","getPreviousCenturyEnd","getCenturyRange","getDecadeStart","getPreviousDecadeStart","getNextDecadeStart","getDecadeEnd","getPreviousDecadeEnd","getDecadeRange","getYearStart","getPreviousYearStart","getNextYearStart","getYearEnd","getPreviousYearEnd","getYearRange","getMonthStart","getPreviousMonthStart","getNextMonthStart","getMonthEnd","getPreviousMonthEnd","getMonthRange","getDayStart","getDayEnd","getDayRange","CALENDAR_TYPES","WEEKDAYS","formatYear","defaultFormatYear","SUNDAY","FRIDAY","SATURDAY","getDayOfWeek","date","calendarType","arguments","length","undefined","ISO_8601","weekday","getDay","ARABIC","HEBREW","US","Error","getBeginOfCenturyYear","beginOfCentury","getBeginOfDecadeYear","beginOfDecade","getBeginOfWeek","year","monthIndex","day","getDate","Date","getWeekNumber","calendarTypeForWeekNumber","beginOfWeek","dayInWeekOne","beginOfFirstWeek","Math","round","getBegin","rangeType","concat","getBeginPrevious","getBeginNext","getBeginPrevious2","getBeginNext2","getEnd","getEndPrevious","getEndPrevious2","getRange","getValueRange","date1","date2","rawNextValue","sort","a","b","toYearLabel","locale","dates","map","join","getCenturyLabel","getDecadeLabel","isWeekend"],"sources":["C:/Users/tmuns/COMP231-004-Team4-F23/node_modules/react-calendar/dist/esm/shared/dates.js"],"sourcesContent":["import { getYear, getMonth as getMonthIndex, getCenturyStart, getPreviousCenturyStart, getNextCenturyStart, getCenturyEnd, getPreviousCenturyEnd, getCenturyRange, getDecadeStart, getPreviousDecadeStart, getNextDecadeStart, getDecadeEnd, getPreviousDecadeEnd, getDecadeRange, getYearStart, getPreviousYearStart, getNextYearStart, getYearEnd, getPreviousYearEnd, getYearRange, getMonthStart, getPreviousMonthStart, getNextMonthStart, getMonthEnd, getPreviousMonthEnd, getMonthRange, getDayStart, getDayEnd, getDayRange } from '@wojtekmaj/date-utils';\r\nimport { CALENDAR_TYPES, WEEKDAYS } from './const';\r\nimport { formatYear as defaultFormatYear } from './dateFormatter';\r\nvar SUNDAY = WEEKDAYS[0];\r\nvar FRIDAY = WEEKDAYS[5];\r\nvar SATURDAY = WEEKDAYS[6];\r\n/* Simple getters - getting a property of a given point in time */\r\n\r\nexport function getDayOfWeek(date) {\r\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CALENDAR_TYPES.ISO_8601;\r\n  var weekday = date.getDay();\r\n\r\n  switch (calendarType) {\r\n    case CALENDAR_TYPES.ISO_8601:\r\n      // Shifts days of the week so that Monday is 0, Sunday is 6\r\n      return (weekday + 6) % 7;\r\n\r\n    case CALENDAR_TYPES.ARABIC:\r\n      return (weekday + 1) % 7;\r\n\r\n    case CALENDAR_TYPES.HEBREW:\r\n    case CALENDAR_TYPES.US:\r\n      return weekday;\r\n\r\n    default:\r\n      throw new Error('Unsupported calendar type.');\r\n  }\r\n}\r\n/**\r\n * Century\r\n */\r\n\r\nexport function getBeginOfCenturyYear(date) {\r\n  var beginOfCentury = getCenturyStart(date);\r\n  return getYear(beginOfCentury);\r\n}\r\n/**\r\n * Decade\r\n */\r\n\r\nexport function getBeginOfDecadeYear(date) {\r\n  var beginOfDecade = getDecadeStart(date);\r\n  return getYear(beginOfDecade);\r\n}\r\n/**\r\n * Week\r\n */\r\n\r\n/**\r\n * Returns the beginning of a given week.\r\n *\r\n * @param {Date} date Date.\r\n * @param {string} calendarType Calendar type. Can be ISO 8601 or US.\r\n */\r\n\r\nexport function getBeginOfWeek(date) {\r\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CALENDAR_TYPES.ISO_8601;\r\n  var year = getYear(date);\r\n  var monthIndex = getMonthIndex(date);\r\n  var day = date.getDate() - getDayOfWeek(date, calendarType);\r\n  return new Date(year, monthIndex, day);\r\n}\r\n/**\r\n * Gets week number according to ISO 8601 or US standard.\r\n * In ISO 8601, Arabic and Hebrew week 1 is the one with January 4.\r\n * In US calendar week 1 is the one with January 1.\r\n *\r\n * @param {Date} date Date.\r\n * @param {string} calendarType Calendar type. Can be ISO 8601 or US.\r\n */\r\n\r\nexport function getWeekNumber(date) {\r\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CALENDAR_TYPES.ISO_8601;\r\n  var calendarTypeForWeekNumber = calendarType === CALENDAR_TYPES.US ? CALENDAR_TYPES.US : CALENDAR_TYPES.ISO_8601;\r\n  var beginOfWeek = getBeginOfWeek(date, calendarTypeForWeekNumber);\r\n  var year = getYear(date) + 1;\r\n  var dayInWeekOne;\r\n  var beginOfFirstWeek; // Look for the first week one that does not come after a given date\r\n\r\n  do {\r\n    dayInWeekOne = new Date(year, 0, calendarTypeForWeekNumber === CALENDAR_TYPES.ISO_8601 ? 4 : 1);\r\n    beginOfFirstWeek = getBeginOfWeek(dayInWeekOne, calendarTypeForWeekNumber);\r\n    year -= 1;\r\n  } while (date - beginOfFirstWeek < 0);\r\n\r\n  return Math.round((beginOfWeek - beginOfFirstWeek) / (8.64e7 * 7)) + 1;\r\n}\r\n/**\r\n * Others\r\n */\r\n\r\n/**\r\n * Returns the beginning of a given range.\r\n *\r\n * @param {string} rangeType Range type (e.g. 'day')\r\n * @param {Date} date Date.\r\n */\r\n\r\nexport function getBegin(rangeType, date) {\r\n  switch (rangeType) {\r\n    case 'century':\r\n      return getCenturyStart(date);\r\n\r\n    case 'decade':\r\n      return getDecadeStart(date);\r\n\r\n    case 'year':\r\n      return getYearStart(date);\r\n\r\n    case 'month':\r\n      return getMonthStart(date);\r\n\r\n    case 'day':\r\n      return getDayStart(date);\r\n\r\n    default:\r\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\r\n  }\r\n}\r\nexport function getBeginPrevious(rangeType, date) {\r\n  switch (rangeType) {\r\n    case 'century':\r\n      return getPreviousCenturyStart(date);\r\n\r\n    case 'decade':\r\n      return getPreviousDecadeStart(date);\r\n\r\n    case 'year':\r\n      return getPreviousYearStart(date);\r\n\r\n    case 'month':\r\n      return getPreviousMonthStart(date);\r\n\r\n    default:\r\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\r\n  }\r\n}\r\nexport function getBeginNext(rangeType, date) {\r\n  switch (rangeType) {\r\n    case 'century':\r\n      return getNextCenturyStart(date);\r\n\r\n    case 'decade':\r\n      return getNextDecadeStart(date);\r\n\r\n    case 'year':\r\n      return getNextYearStart(date);\r\n\r\n    case 'month':\r\n      return getNextMonthStart(date);\r\n\r\n    default:\r\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\r\n  }\r\n}\r\nexport var getBeginPrevious2 = function getBeginPrevious2(rangeType, date) {\r\n  switch (rangeType) {\r\n    case 'decade':\r\n      return getPreviousDecadeStart(date, -100);\r\n\r\n    case 'year':\r\n      return getPreviousYearStart(date, -10);\r\n\r\n    case 'month':\r\n      return getPreviousMonthStart(date, -12);\r\n\r\n    default:\r\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\r\n  }\r\n};\r\nexport var getBeginNext2 = function getBeginNext2(rangeType, date) {\r\n  switch (rangeType) {\r\n    case 'decade':\r\n      return getNextDecadeStart(date, 100);\r\n\r\n    case 'year':\r\n      return getNextYearStart(date, 10);\r\n\r\n    case 'month':\r\n      return getNextMonthStart(date, 12);\r\n\r\n    default:\r\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\r\n  }\r\n};\r\n/**\r\n * Returns the end of a given range.\r\n *\r\n * @param {string} rangeType Range type (e.g. 'day')\r\n * @param {Date} date Date.\r\n */\r\n\r\nexport function getEnd(rangeType, date) {\r\n  switch (rangeType) {\r\n    case 'century':\r\n      return getCenturyEnd(date);\r\n\r\n    case 'decade':\r\n      return getDecadeEnd(date);\r\n\r\n    case 'year':\r\n      return getYearEnd(date);\r\n\r\n    case 'month':\r\n      return getMonthEnd(date);\r\n\r\n    case 'day':\r\n      return getDayEnd(date);\r\n\r\n    default:\r\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\r\n  }\r\n}\r\nexport function getEndPrevious(rangeType, date) {\r\n  switch (rangeType) {\r\n    case 'century':\r\n      return getPreviousCenturyEnd(date);\r\n\r\n    case 'decade':\r\n      return getPreviousDecadeEnd(date);\r\n\r\n    case 'year':\r\n      return getPreviousYearEnd(date);\r\n\r\n    case 'month':\r\n      return getPreviousMonthEnd(date);\r\n\r\n    default:\r\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\r\n  }\r\n}\r\nexport var getEndPrevious2 = function getEndPrevious2(rangeType, date) {\r\n  switch (rangeType) {\r\n    case 'decade':\r\n      return getPreviousDecadeEnd(date, -100);\r\n\r\n    case 'year':\r\n      return getPreviousYearEnd(date, -10);\r\n\r\n    case 'month':\r\n      return getPreviousMonthEnd(date, -12);\r\n\r\n    default:\r\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\r\n  }\r\n};\r\n/**\r\n * Returns an array with the beginning and the end of a given range.\r\n *\r\n * @param {string} rangeType Range type (e.g. 'day')\r\n * @param {Date} date Date.\r\n */\r\n\r\nexport function getRange(rangeType, date) {\r\n  switch (rangeType) {\r\n    case 'century':\r\n      return getCenturyRange(date);\r\n\r\n    case 'decade':\r\n      return getDecadeRange(date);\r\n\r\n    case 'year':\r\n      return getYearRange(date);\r\n\r\n    case 'month':\r\n      return getMonthRange(date);\r\n\r\n    case 'day':\r\n      return getDayRange(date);\r\n\r\n    default:\r\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\r\n  }\r\n}\r\n/**\r\n * Creates a range out of two values, ensuring they are in order and covering entire period ranges.\r\n *\r\n * @param {string} rangeType Range type (e.g. 'day')\r\n * @param {Date} date1 First date.\r\n * @param {Date} date2 Second date.\r\n */\r\n\r\nexport function getValueRange(rangeType, date1, date2) {\r\n  var rawNextValue = [date1, date2].sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n  return [getBegin(rangeType, rawNextValue[0]), getEnd(rangeType, rawNextValue[1])];\r\n}\r\n\r\nfunction toYearLabel(locale) {\r\n  var formatYear = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultFormatYear;\r\n  var dates = arguments.length > 2 ? arguments[2] : undefined;\r\n  return dates.map(function (date) {\r\n    return formatYear(locale, date);\r\n  }).join(' â€“ ');\r\n}\r\n/**\r\n * Returns a string labelling a century of a given date.\r\n * For example, for 2017 it will return 2001-2100.\r\n *\r\n * @param {Date|String|Number} date Date or a year as a string or as a number.\r\n */\r\n\r\n\r\nexport function getCenturyLabel(locale, formatYear, date) {\r\n  return toYearLabel(locale, formatYear, getCenturyRange(date));\r\n}\r\n/**\r\n * Returns a string labelling a century of a given date.\r\n * For example, for 2017 it will return 2011-2020.\r\n *\r\n * @param {Date|String|Number} date Date or a year as a string or as a number.\r\n */\r\n\r\nexport function getDecadeLabel(locale, formatYear, date) {\r\n  return toYearLabel(locale, formatYear, getDecadeRange(date));\r\n}\r\n/**\r\n * Returns a boolean determining whether a given date is on Saturday or Sunday.\r\n *\r\n * @param {Date} date Date.\r\n */\r\n\r\nexport function isWeekend(date) {\r\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CALENDAR_TYPES.ISO_8601;\r\n  var weekday = date.getDay();\r\n\r\n  switch (calendarType) {\r\n    case CALENDAR_TYPES.ARABIC:\r\n    case CALENDAR_TYPES.HEBREW:\r\n      return weekday === FRIDAY || weekday === SATURDAY;\r\n\r\n    case CALENDAR_TYPES.ISO_8601:\r\n    case CALENDAR_TYPES.US:\r\n      return weekday === SATURDAY || weekday === SUNDAY;\r\n\r\n    default:\r\n      throw new Error('Unsupported calendar type.');\r\n  }\r\n}"],"mappings":"AAAA,SAASA,OAAO,EAAEC,QAAQ,IAAIC,aAAa,EAAEC,eAAe,EAAEC,uBAAuB,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,qBAAqB,EAAEC,eAAe,EAAEC,cAAc,EAAEC,sBAAsB,EAAEC,kBAAkB,EAAEC,YAAY,EAAEC,oBAAoB,EAAEC,cAAc,EAAEC,YAAY,EAAEC,oBAAoB,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,kBAAkB,EAAEC,YAAY,EAAEC,aAAa,EAAEC,qBAAqB,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,uBAAuB;AACniB,SAASC,cAAc,EAAEC,QAAQ,QAAQ,SAAS;AAClD,SAASC,UAAU,IAAIC,iBAAiB,QAAQ,iBAAiB;AACjE,IAAIC,MAAM,GAAGH,QAAQ,CAAC,CAAC,CAAC;AACxB,IAAII,MAAM,GAAGJ,QAAQ,CAAC,CAAC,CAAC;AACxB,IAAIK,QAAQ,GAAGL,QAAQ,CAAC,CAAC,CAAC;AAC1B;;AAEA,OAAO,SAASM,YAAYA,CAACC,IAAI,EAAE;EACjC,IAAIC,YAAY,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGV,cAAc,CAACa,QAAQ;EAC9G,IAAIC,OAAO,GAAGN,IAAI,CAACO,MAAM,CAAC,CAAC;EAE3B,QAAQN,YAAY;IAClB,KAAKT,cAAc,CAACa,QAAQ;MAC1B;MACA,OAAO,CAACC,OAAO,GAAG,CAAC,IAAI,CAAC;IAE1B,KAAKd,cAAc,CAACgB,MAAM;MACxB,OAAO,CAACF,OAAO,GAAG,CAAC,IAAI,CAAC;IAE1B,KAAKd,cAAc,CAACiB,MAAM;IAC1B,KAAKjB,cAAc,CAACkB,EAAE;MACpB,OAAOJ,OAAO;IAEhB;MACE,MAAM,IAAIK,KAAK,CAAC,4BAA4B,CAAC;EACjD;AACF;AACA;AACA;AACA;;AAEA,OAAO,SAASC,qBAAqBA,CAACZ,IAAI,EAAE;EAC1C,IAAIa,cAAc,GAAGhD,eAAe,CAACmC,IAAI,CAAC;EAC1C,OAAOtC,OAAO,CAACmD,cAAc,CAAC;AAChC;AACA;AACA;AACA;;AAEA,OAAO,SAASC,oBAAoBA,CAACd,IAAI,EAAE;EACzC,IAAIe,aAAa,GAAG5C,cAAc,CAAC6B,IAAI,CAAC;EACxC,OAAOtC,OAAO,CAACqD,aAAa,CAAC;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAcA,CAAChB,IAAI,EAAE;EACnC,IAAIC,YAAY,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGV,cAAc,CAACa,QAAQ;EAC9G,IAAIY,IAAI,GAAGvD,OAAO,CAACsC,IAAI,CAAC;EACxB,IAAIkB,UAAU,GAAGtD,aAAa,CAACoC,IAAI,CAAC;EACpC,IAAImB,GAAG,GAAGnB,IAAI,CAACoB,OAAO,CAAC,CAAC,GAAGrB,YAAY,CAACC,IAAI,EAAEC,YAAY,CAAC;EAC3D,OAAO,IAAIoB,IAAI,CAACJ,IAAI,EAAEC,UAAU,EAAEC,GAAG,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,aAAaA,CAACtB,IAAI,EAAE;EAClC,IAAIC,YAAY,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGV,cAAc,CAACa,QAAQ;EAC9G,IAAIkB,yBAAyB,GAAGtB,YAAY,KAAKT,cAAc,CAACkB,EAAE,GAAGlB,cAAc,CAACkB,EAAE,GAAGlB,cAAc,CAACa,QAAQ;EAChH,IAAImB,WAAW,GAAGR,cAAc,CAAChB,IAAI,EAAEuB,yBAAyB,CAAC;EACjE,IAAIN,IAAI,GAAGvD,OAAO,CAACsC,IAAI,CAAC,GAAG,CAAC;EAC5B,IAAIyB,YAAY;EAChB,IAAIC,gBAAgB,CAAC,CAAC;;EAEtB,GAAG;IACDD,YAAY,GAAG,IAAIJ,IAAI,CAACJ,IAAI,EAAE,CAAC,EAAEM,yBAAyB,KAAK/B,cAAc,CAACa,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/FqB,gBAAgB,GAAGV,cAAc,CAACS,YAAY,EAAEF,yBAAyB,CAAC;IAC1EN,IAAI,IAAI,CAAC;EACX,CAAC,QAAQjB,IAAI,GAAG0B,gBAAgB,GAAG,CAAC;EAEpC,OAAOC,IAAI,CAACC,KAAK,CAAC,CAACJ,WAAW,GAAGE,gBAAgB,KAAK,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,QAAQA,CAACC,SAAS,EAAE9B,IAAI,EAAE;EACxC,QAAQ8B,SAAS;IACf,KAAK,SAAS;MACZ,OAAOjE,eAAe,CAACmC,IAAI,CAAC;IAE9B,KAAK,QAAQ;MACX,OAAO7B,cAAc,CAAC6B,IAAI,CAAC;IAE7B,KAAK,MAAM;MACT,OAAOvB,YAAY,CAACuB,IAAI,CAAC;IAE3B,KAAK,OAAO;MACV,OAAOjB,aAAa,CAACiB,IAAI,CAAC;IAE5B,KAAK,KAAK;MACR,OAAOX,WAAW,CAACW,IAAI,CAAC;IAE1B;MACE,MAAM,IAAIW,KAAK,CAAC,qBAAqB,CAACoB,MAAM,CAACD,SAAS,CAAC,CAAC;EAC5D;AACF;AACA,OAAO,SAASE,gBAAgBA,CAACF,SAAS,EAAE9B,IAAI,EAAE;EAChD,QAAQ8B,SAAS;IACf,KAAK,SAAS;MACZ,OAAOhE,uBAAuB,CAACkC,IAAI,CAAC;IAEtC,KAAK,QAAQ;MACX,OAAO5B,sBAAsB,CAAC4B,IAAI,CAAC;IAErC,KAAK,MAAM;MACT,OAAOtB,oBAAoB,CAACsB,IAAI,CAAC;IAEnC,KAAK,OAAO;MACV,OAAOhB,qBAAqB,CAACgB,IAAI,CAAC;IAEpC;MACE,MAAM,IAAIW,KAAK,CAAC,qBAAqB,CAACoB,MAAM,CAACD,SAAS,CAAC,CAAC;EAC5D;AACF;AACA,OAAO,SAASG,YAAYA,CAACH,SAAS,EAAE9B,IAAI,EAAE;EAC5C,QAAQ8B,SAAS;IACf,KAAK,SAAS;MACZ,OAAO/D,mBAAmB,CAACiC,IAAI,CAAC;IAElC,KAAK,QAAQ;MACX,OAAO3B,kBAAkB,CAAC2B,IAAI,CAAC;IAEjC,KAAK,MAAM;MACT,OAAOrB,gBAAgB,CAACqB,IAAI,CAAC;IAE/B,KAAK,OAAO;MACV,OAAOf,iBAAiB,CAACe,IAAI,CAAC;IAEhC;MACE,MAAM,IAAIW,KAAK,CAAC,qBAAqB,CAACoB,MAAM,CAACD,SAAS,CAAC,CAAC;EAC5D;AACF;AACA,OAAO,IAAII,iBAAiB,GAAG,SAASA,iBAAiBA,CAACJ,SAAS,EAAE9B,IAAI,EAAE;EACzE,QAAQ8B,SAAS;IACf,KAAK,QAAQ;MACX,OAAO1D,sBAAsB,CAAC4B,IAAI,EAAE,CAAC,GAAG,CAAC;IAE3C,KAAK,MAAM;MACT,OAAOtB,oBAAoB,CAACsB,IAAI,EAAE,CAAC,EAAE,CAAC;IAExC,KAAK,OAAO;MACV,OAAOhB,qBAAqB,CAACgB,IAAI,EAAE,CAAC,EAAE,CAAC;IAEzC;MACE,MAAM,IAAIW,KAAK,CAAC,qBAAqB,CAACoB,MAAM,CAACD,SAAS,CAAC,CAAC;EAC5D;AACF,CAAC;AACD,OAAO,IAAIK,aAAa,GAAG,SAASA,aAAaA,CAACL,SAAS,EAAE9B,IAAI,EAAE;EACjE,QAAQ8B,SAAS;IACf,KAAK,QAAQ;MACX,OAAOzD,kBAAkB,CAAC2B,IAAI,EAAE,GAAG,CAAC;IAEtC,KAAK,MAAM;MACT,OAAOrB,gBAAgB,CAACqB,IAAI,EAAE,EAAE,CAAC;IAEnC,KAAK,OAAO;MACV,OAAOf,iBAAiB,CAACe,IAAI,EAAE,EAAE,CAAC;IAEpC;MACE,MAAM,IAAIW,KAAK,CAAC,qBAAqB,CAACoB,MAAM,CAACD,SAAS,CAAC,CAAC;EAC5D;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASM,MAAMA,CAACN,SAAS,EAAE9B,IAAI,EAAE;EACtC,QAAQ8B,SAAS;IACf,KAAK,SAAS;MACZ,OAAO9D,aAAa,CAACgC,IAAI,CAAC;IAE5B,KAAK,QAAQ;MACX,OAAO1B,YAAY,CAAC0B,IAAI,CAAC;IAE3B,KAAK,MAAM;MACT,OAAOpB,UAAU,CAACoB,IAAI,CAAC;IAEzB,KAAK,OAAO;MACV,OAAOd,WAAW,CAACc,IAAI,CAAC;IAE1B,KAAK,KAAK;MACR,OAAOV,SAAS,CAACU,IAAI,CAAC;IAExB;MACE,MAAM,IAAIW,KAAK,CAAC,qBAAqB,CAACoB,MAAM,CAACD,SAAS,CAAC,CAAC;EAC5D;AACF;AACA,OAAO,SAASO,cAAcA,CAACP,SAAS,EAAE9B,IAAI,EAAE;EAC9C,QAAQ8B,SAAS;IACf,KAAK,SAAS;MACZ,OAAO7D,qBAAqB,CAAC+B,IAAI,CAAC;IAEpC,KAAK,QAAQ;MACX,OAAOzB,oBAAoB,CAACyB,IAAI,CAAC;IAEnC,KAAK,MAAM;MACT,OAAOnB,kBAAkB,CAACmB,IAAI,CAAC;IAEjC,KAAK,OAAO;MACV,OAAOb,mBAAmB,CAACa,IAAI,CAAC;IAElC;MACE,MAAM,IAAIW,KAAK,CAAC,qBAAqB,CAACoB,MAAM,CAACD,SAAS,CAAC,CAAC;EAC5D;AACF;AACA,OAAO,IAAIQ,eAAe,GAAG,SAASA,eAAeA,CAACR,SAAS,EAAE9B,IAAI,EAAE;EACrE,QAAQ8B,SAAS;IACf,KAAK,QAAQ;MACX,OAAOvD,oBAAoB,CAACyB,IAAI,EAAE,CAAC,GAAG,CAAC;IAEzC,KAAK,MAAM;MACT,OAAOnB,kBAAkB,CAACmB,IAAI,EAAE,CAAC,EAAE,CAAC;IAEtC,KAAK,OAAO;MACV,OAAOb,mBAAmB,CAACa,IAAI,EAAE,CAAC,EAAE,CAAC;IAEvC;MACE,MAAM,IAAIW,KAAK,CAAC,qBAAqB,CAACoB,MAAM,CAACD,SAAS,CAAC,CAAC;EAC5D;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASS,QAAQA,CAACT,SAAS,EAAE9B,IAAI,EAAE;EACxC,QAAQ8B,SAAS;IACf,KAAK,SAAS;MACZ,OAAO5D,eAAe,CAAC8B,IAAI,CAAC;IAE9B,KAAK,QAAQ;MACX,OAAOxB,cAAc,CAACwB,IAAI,CAAC;IAE7B,KAAK,MAAM;MACT,OAAOlB,YAAY,CAACkB,IAAI,CAAC;IAE3B,KAAK,OAAO;MACV,OAAOZ,aAAa,CAACY,IAAI,CAAC;IAE5B,KAAK,KAAK;MACR,OAAOT,WAAW,CAACS,IAAI,CAAC;IAE1B;MACE,MAAM,IAAIW,KAAK,CAAC,qBAAqB,CAACoB,MAAM,CAACD,SAAS,CAAC,CAAC;EAC5D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASU,aAAaA,CAACV,SAAS,EAAEW,KAAK,EAAEC,KAAK,EAAE;EACrD,IAAIC,YAAY,GAAG,CAACF,KAAK,EAAEC,KAAK,CAAC,CAACE,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;IACrD,OAAOD,CAAC,GAAGC,CAAC;EACd,CAAC,CAAC;EACF,OAAO,CAACjB,QAAQ,CAACC,SAAS,EAAEa,YAAY,CAAC,CAAC,CAAC,CAAC,EAAEP,MAAM,CAACN,SAAS,EAAEa,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF;AAEA,SAASI,WAAWA,CAACC,MAAM,EAAE;EAC3B,IAAItD,UAAU,GAAGQ,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGP,iBAAiB;EACtG,IAAIsD,KAAK,GAAG/C,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAGE,SAAS;EAC3D,OAAO6C,KAAK,CAACC,GAAG,CAAC,UAAUlD,IAAI,EAAE;IAC/B,OAAON,UAAU,CAACsD,MAAM,EAAEhD,IAAI,CAAC;EACjC,CAAC,CAAC,CAACmD,IAAI,CAAC,KAAK,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,SAASC,eAAeA,CAACJ,MAAM,EAAEtD,UAAU,EAAEM,IAAI,EAAE;EACxD,OAAO+C,WAAW,CAACC,MAAM,EAAEtD,UAAU,EAAExB,eAAe,CAAC8B,IAAI,CAAC,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASqD,cAAcA,CAACL,MAAM,EAAEtD,UAAU,EAAEM,IAAI,EAAE;EACvD,OAAO+C,WAAW,CAACC,MAAM,EAAEtD,UAAU,EAAElB,cAAc,CAACwB,IAAI,CAAC,CAAC;AAC9D;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASsD,SAASA,CAACtD,IAAI,EAAE;EAC9B,IAAIC,YAAY,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGV,cAAc,CAACa,QAAQ;EAC9G,IAAIC,OAAO,GAAGN,IAAI,CAACO,MAAM,CAAC,CAAC;EAE3B,QAAQN,YAAY;IAClB,KAAKT,cAAc,CAACgB,MAAM;IAC1B,KAAKhB,cAAc,CAACiB,MAAM;MACxB,OAAOH,OAAO,KAAKT,MAAM,IAAIS,OAAO,KAAKR,QAAQ;IAEnD,KAAKN,cAAc,CAACa,QAAQ;IAC5B,KAAKb,cAAc,CAACkB,EAAE;MACpB,OAAOJ,OAAO,KAAKR,QAAQ,IAAIQ,OAAO,KAAKV,MAAM;IAEnD;MACE,MAAM,IAAIe,KAAK,CAAC,4BAA4B,CAAC;EACjD;AACF"},"metadata":{},"sourceType":"module"}