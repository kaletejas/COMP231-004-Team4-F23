{"ast":null,"code":"import getUserLocale from 'get-user-locale';\nfunction getFormatter(options) {\n  return function (locale, date) {\n    return date.toLocaleString(locale || getUserLocale(), options);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\nvar formatDateOptions = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar formatDayOptions = {\n  day: 'numeric'\n};\nvar formatLongDateOptions = {\n  day: 'numeric',\n  month: 'long',\n  year: 'numeric'\n};\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatMonthYearOptions = {\n  month: 'long',\n  year: 'numeric'\n};\nvar formatShortWeekdayOptions = {\n  weekday: 'short'\n};\nvar formatWeekdayOptions = {\n  weekday: 'long'\n};\nvar formatYearOptions = {\n  year: 'numeric'\n};\nexport var formatDate = getSafeFormatter(formatDateOptions);\nexport var formatDay = getSafeFormatter(formatDayOptions);\nexport var formatLongDate = getSafeFormatter(formatLongDateOptions);\nexport var formatMonth = getSafeFormatter(formatMonthOptions);\nexport var formatMonthYear = getSafeFormatter(formatMonthYearOptions);\nexport var formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\nexport var formatWeekday = getSafeFormatter(formatWeekdayOptions);\nexport var formatYear = getSafeFormatter(formatYearOptions);","map":{"version":3,"names":["getUserLocale","getFormatter","options","locale","date","toLocaleString","toSafeHour","safeDate","Date","setHours","getSafeFormatter","formatDateOptions","day","month","year","formatDayOptions","formatLongDateOptions","formatMonthOptions","formatMonthYearOptions","formatShortWeekdayOptions","weekday","formatWeekdayOptions","formatYearOptions","formatDate","formatDay","formatLongDate","formatMonth","formatMonthYear","formatShortWeekday","formatWeekday","formatYear"],"sources":["C:/COMP231-004-Team4-F23/node_modules/react-calendar/dist/esm/shared/dateFormatter.js"],"sourcesContent":["import getUserLocale from 'get-user-locale';\n\nfunction getFormatter(options) {\n  return function (locale, date) {\n    return date.toLocaleString(locale || getUserLocale(), options);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\n\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\n\nvar formatDateOptions = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar formatDayOptions = {\n  day: 'numeric'\n};\nvar formatLongDateOptions = {\n  day: 'numeric',\n  month: 'long',\n  year: 'numeric'\n};\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatMonthYearOptions = {\n  month: 'long',\n  year: 'numeric'\n};\nvar formatShortWeekdayOptions = {\n  weekday: 'short'\n};\nvar formatWeekdayOptions = {\n  weekday: 'long'\n};\nvar formatYearOptions = {\n  year: 'numeric'\n};\nexport var formatDate = getSafeFormatter(formatDateOptions);\nexport var formatDay = getSafeFormatter(formatDayOptions);\nexport var formatLongDate = getSafeFormatter(formatLongDateOptions);\nexport var formatMonth = getSafeFormatter(formatMonthOptions);\nexport var formatMonthYear = getSafeFormatter(formatMonthYearOptions);\nexport var formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\nexport var formatWeekday = getSafeFormatter(formatWeekdayOptions);\nexport var formatYear = getSafeFormatter(formatYearOptions);"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAE3C,SAASC,YAAYA,CAACC,OAAO,EAAE;EAC7B,OAAO,UAAUC,MAAM,EAAEC,IAAI,EAAE;IAC7B,OAAOA,IAAI,CAACC,cAAc,CAACF,MAAM,IAAIH,aAAa,CAAC,CAAC,EAAEE,OAAO,CAAC;EAChE,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASI,UAAUA,CAACF,IAAI,EAAE;EACxB,IAAIG,QAAQ,GAAG,IAAIC,IAAI,CAACJ,IAAI,CAAC;EAC7B,OAAO,IAAII,IAAI,CAACD,QAAQ,CAACE,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxC;AAEA,SAASC,gBAAgBA,CAACR,OAAO,EAAE;EACjC,OAAO,UAAUC,MAAM,EAAEC,IAAI,EAAE;IAC7B,OAAOH,YAAY,CAACC,OAAO,CAAC,CAACC,MAAM,EAAEG,UAAU,CAACF,IAAI,CAAC,CAAC;EACxD,CAAC;AACH;AAEA,IAAIO,iBAAiB,GAAG;EACtBC,GAAG,EAAE,SAAS;EACdC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE;AACR,CAAC;AACD,IAAIC,gBAAgB,GAAG;EACrBH,GAAG,EAAE;AACP,CAAC;AACD,IAAII,qBAAqB,GAAG;EAC1BJ,GAAG,EAAE,SAAS;EACdC,KAAK,EAAE,MAAM;EACbC,IAAI,EAAE;AACR,CAAC;AACD,IAAIG,kBAAkB,GAAG;EACvBJ,KAAK,EAAE;AACT,CAAC;AACD,IAAIK,sBAAsB,GAAG;EAC3BL,KAAK,EAAE,MAAM;EACbC,IAAI,EAAE;AACR,CAAC;AACD,IAAIK,yBAAyB,GAAG;EAC9BC,OAAO,EAAE;AACX,CAAC;AACD,IAAIC,oBAAoB,GAAG;EACzBD,OAAO,EAAE;AACX,CAAC;AACD,IAAIE,iBAAiB,GAAG;EACtBR,IAAI,EAAE;AACR,CAAC;AACD,OAAO,IAAIS,UAAU,GAAGb,gBAAgB,CAACC,iBAAiB,CAAC;AAC3D,OAAO,IAAIa,SAAS,GAAGd,gBAAgB,CAACK,gBAAgB,CAAC;AACzD,OAAO,IAAIU,cAAc,GAAGf,gBAAgB,CAACM,qBAAqB,CAAC;AACnE,OAAO,IAAIU,WAAW,GAAGhB,gBAAgB,CAACO,kBAAkB,CAAC;AAC7D,OAAO,IAAIU,eAAe,GAAGjB,gBAAgB,CAACQ,sBAAsB,CAAC;AACrE,OAAO,IAAIU,kBAAkB,GAAGlB,gBAAgB,CAACS,yBAAyB,CAAC;AAC3E,OAAO,IAAIU,aAAa,GAAGnB,gBAAgB,CAACW,oBAAoB,CAAC;AACjE,OAAO,IAAIS,UAAU,GAAGpB,gBAAgB,CAACY,iBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}